version: "3"

services:

  traefik:
    image: traefik:v2.10.4
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      # if set to expose container "traefik.enabled=true" must be set
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web-secure.address=:443"
      - "--entrypoints.web-secure.http3"
      - "--experimental.http3=true"
      - "--accesslog=true"
      # disables SSL certificate verification between your traefik instance and your backend
      - "--serverstransport.insecureskipverify=true"
      - "--certificatesresolvers.certificato.acme.dnschallenge=true"
      - "--certificatesresolvers.certificato.acme.dnschallenge.provider=linode"
      - "--certificatesresolvers.certificato.acme.dnschallenge.delaybeforecheck=10"
      - "--certificatesresolvers.certificato.acme.dnschallenge.resolvers=1.1.1.1:53"
      - "--certificatesresolvers.certificato.acme.email=adrianforsius@gmail.com"
      - "--certificatesresolvers.certificato.acme.storage=/letsencrypt/acme.json"
      - "--ping=true"
    environment:
      LINODE_TOKEN: ${LINODE_TOKEN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.adrianforsiusconsulting.se`)"
      - "traefik.http.routers.api.entrypoints=web-secure"
      - "traefik.http.routers.api.tls.certresolver=certificato"
      - "traefik.http.routers.api.service=api@internal"
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can listen to the Docker events
      - "./letsencrypt:/letsencrypt"
    restart: always

  web:
    image: nginxdemos/hello
    ports:
      - "80"
    labels:
      - "traefik.http.routers.web.rule=Host(`adrianforsiusconsulting.se`)"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.tls.certresolver=certificato"
      - "traefik.http.routers.web.entrypoints=websecure"

  tailscale:
    container_name: tailscale
    volumes:
      - ./var/lib:/var/lib
      - ./dev/net/tun:/dev/net/tun
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
    image: tailscale/tailscale
    environment:
      - TS_AUTHKEY=${AUTHKEY}
      - TS_EXTRA_ARGS=--ssh

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      TZ: 'Europe/Stockholm'
      WEBPASSWORD: ${PIHOLE_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.adrianforsiusconsulting.se`)"
      - "traefik.http.routers.pihole.tls=true"
      - "traefik.http.routers.pihole.tls.certresolver=certificato"
      - "traefik.http.routers.pihole.entrypoints=websecure"
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
