version: "3"

services:
  # mailserver:
  #   image: ghcr.io/docker-mailserver/docker-mailserver:latest
  #   container_name: mailserver
  #   # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
  #   hostname: mail.example.com
  #   env_file: mailserver.env
  #   # More information about the mail-server ports:
  #   # https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/
  #   # To avoid conflicts with yaml base-60 float, DO NOT remove the quotation marks.
  #   ports:
  #     - "25:25"    # SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)
  #     - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
  #     - "465:465"  # ESMTP (implicit TLS)
  #     - "587:587"  # ESMTP (explicit TLS => STARTTLS)
  #     - "993:993"  # IMAP4 (implicit TLS)
  #   volumes:
  #     - ./docker-data/dms/mail-data/:/var/mail/
  #     - ./docker-data/dms/mail-state/:/var/mail-state/
  #     - ./docker-data/dms/mail-logs/:/var/log/mail/
  #     - ./docker-data/dms/config/:/tmp/docker-mailserver/
  #     - /etc/localtime:/etc/localtime:ro
  #   restart: always
  #   stop_grace_period: 1m
  #   # Uncomment if using `ENABLE_FAIL2BAN=1`:
  #   # cap_add:
  #   #   - NET_ADMIN
  #   healthcheck:
  #     test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
  #     timeout: 3s
  #     retries: 0

  traefik:
    image: traefik:v2.8
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      # - "--providers.file.directory=/FileProvider/"
      # - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web-secure.address=:443"
      - "--entrypoints.web-secure.http3"
      - "--experimental.http3=true"
      - "--serverstransport.insecureskipverify=true"
      # - "--certificatesresolvers.certificato.acme.dnschallenge=true"
      # - "--certificatesresolvers.certificato.acme.dnschallenge.provider=cloudflare"
      # - "--certificatesresolvers.certificato.acme.dnschallenge.delaybeforecheck=10"
      # - "--certificatesresolvers.certificato.acme.dnschallenge.resolvers=1.1.1.1:53"
      # # - "--certificatesresolvers.certificato.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      # - "--certificatesresolvers.certificato.acme.email=${ACME_EMAIL}"
      # - "--certificatesresolvers.certificato.acme.storage=acme.json"
      - "--ping=true"
    environment:
      CF_API_EMAIL: ${CF_API_EMAIL}
      CF_API_KEY: ${CF_API_KEY}
      CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=web-secure"
      - "traefik.http.routers.api.tls.certresolver=certificato"
      - "traefik.http.routers.api.tls.domains[0].main=*.${DOMAIN}"
      - "traefik.http.routers.api.service=api@internal"
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can listen to the Docker events
      - /path/to/docker/traefik/acme.json:/acme.json
      - /path/to/docker/traefik/FileProvider/:/FileProvider/
    restart: always

  tailscale:
    container_name: tailscale
    volumes:
      - ./var/lib:/var/lib
      - ./dev/net/tun:/dev/net/tun
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
    image: tailscale/tailscale
    environment:
      - TS_AUTHKEY=${AUTHKEY}
      - TS_EXTRA_ARGS="--ssh"

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
    environment:
      TZ: 'Europe/Stockholm'
      WEBPASSWORD: ${PIHOLE_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.adrianforsiusconsulting.se`)"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.http.routers.pihole.entrypoints=web"
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
